{{- if .Release.IsUpgrade -}}
{{- if eq (include "eric-oss-app-lcm.dbSecretName" .) .Chart.Name -}}
#
# COPYRIGHT Ericsson 2021
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-oss-app-lcm.name" . }}-change-db-creds-hook
  labels:
    {{- include "eric-oss-app-lcm.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- include "eric-oss-app-lcm.annotations" . | nindent 4 }}
spec:
  backoffLimit: 8
  template:
    spec:
      {{- if include "eric-oss-app-lcm.pullSecret" . }}
      imagePullSecrets:
        - name: {{ include "eric-oss-app-lcm.pullSecret" . | quote }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      nodeSelector: {{ include "eric-oss-app-lcm.nodeSelector" . | nindent 6 -}}
      serviceAccountName: {{ template "eric-oss-app-lcm.fullname" . }}
      securityContext:
        fsGroup: {{ include "eric-oss-app-lcm.fsGroup.coordinated" . }}
      {{- if (eq (include "eric-oss-app-lcm.global-security-tls-enabled" .) "true") }}
      volumes:
      {{ $dbConfig := index .Values "eric-data-document-db" }}
        - name: init-sip-tls-ca
          secret:
            secretName: eric-sec-sip-tls-trusted-root-cert
            defaultMode: 0440
            optional: true
        - name: init-cert
          secret:
            secretName: {{ $dbConfig.name }}-postgres-cert
            defaultMode: 0440
            optional: true
      {{- end }}
      containers:
        {{ $dbConfig := index .Values "eric-data-document-db" }}
        - name: {{ template "eric-oss-app-lcm.name" . }}-change-db-secret-hook-container
          image: {{ template "eric-oss-app-lcm.initDbImagePath" . }}
          imagePullPolicy: {{ include "eric-oss-app-lcm.imagePullPolicy" . | quote}}
          command:
            - sh
            - -c
            - |
              pg_isready >/dev/null
              if [ $? -eq 2 ]; then
                unset PGSSLMODE PGSSLCERT PGSSLKEY PGSSLROOTCERT;
              fi
              psql -c "ALTER USER postgres WITH PASSWORD '$(NEW_PGPASSWORD)'";
              psql -c "ALTER ROLE app_lcm_user RENAME TO $(NEW_APP_LCM_DB_USER)";
              psql -c "ALTER USER $(NEW_APP_LCM_DB_USER) WITH PASSWORD '$(NEW_APP_LCM_DB_PASSWORD)'";
              psql -c "ALTER USER replica WITH PASSWORD '$(NEW_REPLICA_PGPASSWORD)'";
          {{- if (eq (include "eric-oss-app-lcm.global-security-tls-enabled" .) "true") }}
          volumeMounts:
            - name: init-cert
              mountPath: /opt/mtls/cert
              readOnly: true
            - name: init-sip-tls-ca
              mountPath: /opt/mtls/ca
              readOnly: true
          {{- end }}
          env:
            - name: PGHOST
              value: {{ $dbConfig.originalAppLcmDb.name }}
            - name: PGPORT
              value: {{ $dbConfig.service.port | quote }}
            - name: PGDATABASE
              value: {{ $dbConfig.postgresDatabase }}
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "eric-oss-app-lcm.dbSecretName" . | quote }}
                  key: super-pwd
            - name: NEW_PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $dbConfig.credentials.kubernetesSecretName }}
                  key: super-pwd
            - name: NEW_APP_LCM_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $dbConfig.credentials.kubernetesSecretName }}
                  key: custom-user
            - name: NEW_APP_LCM_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $dbConfig.credentials.kubernetesSecretName }}
                  key: custom-pwd
            - name: NEW_REPLICA_PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $dbConfig.credentials.kubernetesSecretName }}
                  key: replica-pwd
            {{- if (eq (include "eric-oss-app-lcm.global-security-tls-enabled" .) "true") }}
            - name: PGSSLMODE
              value: verify-full
            - name: PGSSLCERT
              value: /opt/mtls/cert/clicert.pem
            - name: PGSSLKEY
              value: /opt/mtls/cert/cliprivkey.pem
            - name: PGSSLROOTCERT
              value: /opt/mtls/ca/cacertbundle.pem
            {{- end }}
{{- end -}}
{{- end -}}