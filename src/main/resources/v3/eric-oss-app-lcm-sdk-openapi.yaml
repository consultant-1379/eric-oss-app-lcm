#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

openapi: 3.0.2
info:
  x-api-id: 12f6a604-1712-43a6-a175-467bbcc0327e
  x-audience: external-partner
  description: |
    The App Life Cycle Management (LCM) API controls and monitors the life cycle of the Apps and their instances.
  version: 3.0.0
  title: App Lifecycle Management API
  contact:
    url: https://www.ericsson.com
tags:
  - name: Apps
    description: App lifecycle operations Endpoints
  - name: App Instances
    description: App Instance lifecycle operations Endpoints
servers:
  - url: https://{eic-host}/app-lifecycle-management/v3
    variables:
      host:
        default: localhost
        description: Change this value to point to your custom host.
paths:
  /apps:
    get:
      summary: Get all Apps
      description: Get a list of all available Apps. This endpoint fetches information about multiple Apps, allowing users to view the details of each App present in the system. Users can use query parameters to filter and refine the list of returned Apps based on specific criteria.
      tags:
        - Apps
      operationId: "getApps"
      parameters:
        - name: name
          in: query
          description: "Filter by name."
          required: false
          schema:
            type: string
        - name: version
          in: query
          description: "Filter by version."
          required: false
          schema:
            type: string
        - name: mode
          in: query
          description: "Filter by mode."
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: "Filter by status."
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: "Filter by type."
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: |
            To get a paginated list of Apps, use the offset and limit query params to manage the number of Apps to returned.
            The offset specifies the start element for the Apps returned. To get the next page of entries, the API needs to be called with an offset
            parameter that equals the sum of the previous offset value and limit returned in the previous result.
          required: false
          explode: true
          schema:
            type: string
            minimum: 0
          examples:
            offsetExample:
              summary: Example of Offset
              value: /v3/apps?offset=11&limit=10
        - name: limit
          in: query
          description: |
            Limit is used with the offset query param to return a paginated list of Apps. The limit specifies the max number of Apps to return.
          required: false
          style: form
          explode: true
          schema:
            type: string
            minimum: 1
          examples:
            pageLimitExample:
              summary: Example of Limit
              value: /v3/apps?offset=11&limit=10
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK Get Apps response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppItems"
              examples:
                AppItemsResponseOnCreated:
                  $ref: "#/components/examples/AppItemsResponseOnCreated"
                AppItemsResponseOnInitialized:
                  $ref: "#/components/examples/AppItemsResponseOnInitialized"
                AppItemsResponseOnDeInitialized:
                  $ref: "#/components/examples/AppItemsResponseOnDeInitialize"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - Apps
      summary: Create an App
      description: Create an App by providing information from the App package. This API is internally utilized by the onboarding microservice for the App creation process.
      operationId: createApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
            examples:
              CreateAppRequest:
                $ref: '#/components/examples/CreateAppRequest'
        required: true
      responses:
        "201":
          description: Created App response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppDetails'
              examples:
                CreateAppResponse:
                  $ref: '#/components/examples/CreateAppResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /apps/{appId}:
    get:
      summary: Get an App based on AppId
      description: Get detailed information about a specific App identified by its unique AppId.
      tags:
        - Apps
      operationId: "getAppById"
      parameters:
        - in: path
          description: "ID of the App to retrieve"
          required: true
          name: appId
          schema:
            type: string
          examples:
            appId:
              summary: Example of App resource identifier
              value: 26471a81-1de4-4ad9-9724-326eefd22230
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppDetails"
              examples:
                GetAppResponse:
                  $ref: "#/components/examples/GetAppResponse"
                GetAppResponseOnInitialize:
                  $ref: "#/components/examples/GetAppResponseOnInitialize"
                GetAppResponseOnInitialized:
                  $ref: "#/components/examples/GetAppResponseOnInitialized"
                GetAppResponseOnDeInitialized:
                  $ref: "#/components/examples/GetAppResponseOnDeInitialized"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete an App based on AppId
      description: Deletes the App identified by its unique AppId from the system. This operation removes the specific App corresponding to the provided AppId, facilitating the removal of app-related information and resources from the system. Use caution as this action is irreversible and permanently removes the designated App from the system.
      tags:
        - Apps
      operationId: "deleteAppById"
      parameters:
        - in: path
          description: "Id of the App to be deleted"
          required: true
          name: appId
          schema:
            type: string
          examples:
            appId:
              summary: Example of App resource identifier
              value: 26471a81-1de4-4ad9-9724-326eefd22230
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /apps/{appId}/initialization-actions:
    post:
      tags:
        - Apps
      summary: Initiate an action to initialize or deinitialize the specified App
      description: Initiate a specific action (initialize or deinitialize) for the specified App based on the action specified in the request body.
      operationId: "executeInitializeAction"
      parameters:
        - in: path
          description: "Id of the App to be Initialized or Deinitialized"
          required: true
          name: appId
          schema:
            type: string
          examples:
            appId:
              summary: Example of App resource identifier
              value: 26471a81-1de4-4ad9-9724-326eefd22230
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
        - name: Content-Type
          description: This specifies the media type of the request sent by the client to the server.
          in: header
          required: false
          schema:
            type: string
          example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializeActionRequest'
            examples:
              InitializeAppRequest:
                $ref: '#/components/examples/InitializeAppRequest'
              DeinitializeAppRequest:
                $ref: '#/components/examples/DeinitializeAppRequest'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInitializeOperationResponse'
              examples:
                InitializeAppResponse:
                  $ref: '#/components/examples/InitializeAppResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /apps/{appId}/mode:
    put:
      summary: Enable or disable an App
      description: This endpoint facilitates the enabling or disabling of an App which makes the app available for instantiation.
      operationId: "enableDisableApp"
      tags:
        - Apps
      parameters:
        - in: path
          description: "Id of the App to be Enabled or Disabled"
          name: appId
          schema:
            type: string
          required: true
          examples:
            appId:
              summary: Example of App resource identifier
              value: 26471a81-1de4-4ad9-9724-326eefd22230
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
        - name: Content-Type
          description: This specifies the media type of the request sent by the client to the server.
          in: header
          required: false
          schema:
            type: string
          example: application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableDisableAppRequest'
            examples:
              EnableAppResponse:
                $ref: "#/components/examples/EnableAppRequest"
              DisableAppResponse:
                $ref: "#/components/examples/DisableAppRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppOperationResponse"
              examples:
                EnableAppResponse:
                  $ref: "#/components/examples/EnableAppResponse"
                DisableAppResponse:
                  $ref: "#/components/examples/DisableAppResponse"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /app-instances:
    get:
      tags:
        - App Instances
      summary: Get App instances
      description: Get a list of all available App instances. This endpoint allows users to fetch information about multiple App instances present in the system, providing an overview of the available instances and their details.
      operationId: getAppInstances
      parameters:
        - name: appId
          in: query
          description: "App Id to get instance information"
          required: false
          schema:
            type: string
          examples:
            appId:
              summary: Example of App resource identifier
              value: 26471a81-1de4-4ad9-9724-326eefd22230
        - name: offset
          in: query
          description: |
            To get a paginated list of App Instances, use the offset and limit query params to manage the number of App Instances to returned.
            The offset specifies the start element for the App Instances returned. To get the next page of entries, the API needs to be called with an offset
            parameter that equals the sum of the previous offset value and limit returned in the previous result.
          required: false
          explode: true
          schema:
            type: string
            minimum: 0
          examples:
            offsetExample:
              summary: Example of Offset
              value: /v3/app-instances?offset=11&limit=10
        - name: limit
          in: query
          description: |
            Limit is used with the offset query param to return a paginated list of App Instances. The limit specifies the max number of App Instances to return.
          required: false
          style: form
          explode: true
          schema:
            type: string
            minimum: 1
          examples:
            pageLimitExample:
              summary: Example of Limit
              value: /v3/app-instances?offset=11&limit=10
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstanceItems'
              examples:
                AppInstancesResponse:
                  $ref: '#/components/examples/AppInstancesResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - App Instances
      summary: Create an App Instance
      description: This endpoint initiates the instance creation of an App, coordinating a series of verification and setup steps. Finally, it generates instance property files and sends an instance creation request to the ACM.  Upon completion, it assigns a unique identifier to track the process and stores the instance details in the LCM database.
      operationId: "createAppInstance"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppInstanceRequest'
            examples:
              CreateAppInstanceRequest:
                $ref: '#/components/examples/CreateAppInstanceRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstance'
              examples:
                CreateAppInstanceResponse:
                  $ref: '#/components/examples/CreateAppInstanceResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /app-instances/{appInstanceId}:
    get:
      tags:
        - App Instances
      summary: Get an App instance based on instance Id
      description: Get detailed information about a specific App instance identified by its unique instance Id. This endpoint enables users to fetch specific details of an App instance using its unique identifier for detailed inspection and review.
      operationId: getAppInstanceById
      parameters:
        - in: path
          description: instanceId
          required: true
          name: appInstanceId
          schema:
            type: string
          examples:
            appInstanceId:
              summary: Example of App instance resource identifier
              value: 7e151de6-18a9-4770-be4f-354b620f0035
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK, App Instances response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstance'
              examples:
                AppInstanceResponse:
                  $ref: '#/components/examples/AppInstanceResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - App Instances
      summary: Delete a specific App instance
      description: Initiates the deletion of a specific instance of an application from the system. Upon initiation, the API responds with a status code 202 (Accepted), indicating that the request has been accepted for processing. Since this operation may take some time to complete, users can retrieve the app instance using the link in the response. They can then monitor the status until the app instance has been successfully deleted.
      operationId: deleteAppInstance
      parameters:
        - name: appInstanceId
          in: path
          description: Id of the App Instance to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: string
          examples:
            appInstanceId:
              summary: Example of App Instance resource identifier
              value: 7e151de6-18a9-4770-be4f-354b620f0035
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstanceOperationResponse'
              examples:
                deleteAppInstanceResponse:
                  $ref: '#/components/examples/DeleteAppInstanceResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /app-instances/{appInstanceId}/deployment-actions:
    post:
      tags:
        - App Instances
      summary: Deploy, Undeploy or Upgrade an App Instance
      description: Facilitates the deployment, undeployment or upgrade of a specific App instance based on the action specified in the request body, and in specified namespace if it's present. This endpoint allows users to trigger the deployment, undeployment or upgrade process for the designated App instance by including the action (deploy, undeploy or upgrade) in the request body.
      operationId: "manageAppInstance"
      parameters:
        - name: appInstanceId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          examples:
            appInstanceId:
              summary: Example of App instance resource identifier
              value: 7e151de6-18a9-4770-be4f-354b620f0035
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
        - name: Content-Type
          description: This specifies the media type of the request sent by the client to the server.
          in: header
          required: false
          schema:
            type: string
          example: application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppInstanceManagementRequest'
            examples:
              deployAppInstanceRequest:
                $ref: '#/components/examples/DeployAppInstanceRequest'
              undeployAppInstanceRequest:
                $ref: '#/components/examples/UndeployAppInstanceRequest'
              upgradeAppInstanceRequest:
                $ref: '#/components/examples/UpgradeAppInstanceRequest'
      responses:
        "201":
          description: Created - Deploy, Undeploy or Upgrade App Instance response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstanceManagementResponse'
              examples:
                DeployAppInstanceResponse:
                  $ref: '#/components/examples/DeployAppInstanceResponse'
                UndeployAppInstanceResponse:
                  $ref: '#/components/examples/UndeployAppInstanceResponse'
                UpgradeAppInstanceResponse:
                  $ref: '#/components/examples/UpgradeAppInstanceResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /app-instances/{appInstanceId}/component-instances:
    put:
      tags:
        - App Instances
      summary: Update details of a specific App Instance
      description: Allows users to modify and update the details of a specific App instance identified by its unique instance Id.
      operationId: updateAppInstance
      parameters:
        - in: path
          description: instanceId
          required: true
          name: appInstanceId
          schema:
            type: string
          examples:
            appInstanceId:
              summary: Example of App instance resource identifier
              value: 7e151de6-18a9-4770-be4f-354b620f0035
        - name: Accept
          description: Indicates the response media type accepted by the client.
          in: header
          required: false
          schema:
            type: string
        - name: Content-Type
          description: This specifies the media type of the request sent by the client to the server.
          in: header
          required: false
          schema:
            type: string
          example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppInstanceRequest'
            examples:
              UpdateAppInstanceRequest:
                $ref: '#/components/examples/UpdateAppInstanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstanceUpdateResponse'
              examples:
                UpdateAppInstanceResponseUndeployed:
                  $ref: '#/components/examples/UpdateAppInstanceResponseUndeployed'
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppInstanceUpdateResponse'
              examples:
                UpdateAppInstanceResponse:
                  $ref: '#/components/examples/UpdateAppInstanceResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    CreateAppRequest:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        type:
          type: string
        provider:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Component:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        version:
          type: string
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
    Artifact:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        location:
          type: string
    Permission:
      type: object
      properties:
        resource:
          type: string
        scope:
          type: string
    Role:
      type: object
      properties:
        name:
          type: string
    InitializeActionRequest:
      type: object
      properties:
        action:
          description: The type of initializations to be executed, for example, initialize or deinitialize App
          type: string
    EnableDisableAppRequest:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AppMode'
    AppMode:
      description: App mode
      type: string
      enum:
        - ENABLED
        - DISABLED
    CreateAppInstanceRequest:
      type: object
      properties:
        appId:
          type: string
    UpdateAppInstanceRequest:
      type: object
      properties:
        componentInstances:
          type: array
          items:
            $ref: '#/components/schemas/ComponentInstances'
    AppInstanceManagementRequest:
      type: object
      properties:
        type:
          type: string
          enum:
            - DEPLOY
            - UNDEPLOY
            - UPGRADE
        targetAppId:
          type: string
        additionalData:
          type: object
          properties:
            componentInstances:
              type: array
              items:
                $ref: '#/components/schemas/ComponentInstances'
    AppItems:
      type: object
      properties:
        items:
          description: The list of all Apps
          type: array
          items:
            $ref: "#/components/schemas/AppDetails"
    AppDetails:
      required:
        - id
        - type
        - provider
        - name
        - version
        - mode
        - status
        - createdAt
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        provider:
          type: string
        name:
          type: string
        version:
          type: string
        mode:
          $ref: '#/components/schemas/AppMode'
        status:
          $ref: '#/components/schemas/AppStatus'
        createdAt:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        self:
          $ref: '#/components/schemas/Href'
    AppStatus:
      type: string
      enum:
        - CREATED
        - DELETED
        - DELETE_ERROR
        - INITIALIZING
        - INITIALIZED
        - INITIALIZE_ERROR
        - DEINITIALIZING
        - DEINITIALIZED
        - DEINITIALIZE_ERROR
      description: App status
    Event:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        createdAt:
          type: string
    Href:
      type: object
      properties:
        href:
          type: string
    AppOperationResponse:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AppMode'
        app:
          properties:
            id:
              type: string
            href:
              type: string
    AppInitializeOperationResponse:
      type: object
      properties:
        app:
          properties:
            status:
              $ref: '#/components/schemas/AppStatus'
            id:
              type: string
            href:
              type: string
    AppInstanceItems:
      type: object
      properties:
        items:
          description: The list of all App Instances
          type: array
          items:
            $ref: "#/components/schemas/AppInstance"
    AppInstance:
      type: object
      properties:
        id:
          type: string
        appId:
          type: string
        status:
          $ref: '#/components/schemas/AppInstanceStatus'
        createdAt:
          type: string
        updatedAt:
          type: string
        credentials:
          $ref: '#/components/schemas/Credentials'
        componentInstances:
          type: array
          items:
            $ref: '#/components/schemas/ComponentInstances'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        self:
          $ref: '#/components/schemas/Href'
        app:
          $ref: '#/components/schemas/Href'
    Credentials:
      type: object
      properties:
        clientId:
          type: string
    ComponentInstances:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        type:
          type: string
        description:
          type: string
        deployState:
          type: string
        message:
          type: string
        properties:
          type: object
          description: "Property values associated with the Component Instance. Can be user defined or default properties."
    AppInstanceStatus:
      type: string
      enum:
        - UNDEPLOYED
        - UNDEPLOYING
        - UNDEPLOY_ERROR
        - DEPLOYED
        - DEPLOYING
        - DEPLOY_ERROR
        - DELETING
        - DELETE_ERROR
        - UPDATING
        - UPDATE_ERROR
        - UPGRADING
    AppInstanceOperationResponse:
      type: object
      properties:
        appInstance:
          type: object
          properties:
            status:
              $ref: '#/components/schemas/AppInstanceStatus'
            href:
              type: string
    AppInstanceManagementResponse:
      properties:
        type:
          type: string
          enum:
            - DEPLOY
            - UNDEPLOY
            - UPGRADE
        additionalData:
          type: object
          properties:
            componentInstances:
              type: array
              items:
                $ref: '#/components/schemas/ComponentInstances'
        targetAppId:
          type: string
        appInstance:
          type: object
          properties:
            status:
              $ref: '#/components/schemas/AppInstanceStatus'
            href:
              type: string
    AppInstanceUpdateResponse:
      type: object
      properties:
        componentInstances:
          type: array
          items:
            $ref: '#/components/schemas/ComponentInstances'
        appInstance:
          type: object
          properties:
            id:
              type: string
            href:
              type: string
    ProblemDetails:
      required:
        - title
        - status
        - detail
      type: object
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          description: The HTTP status code generated by the server
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            BadRequest:
              $ref: '#/components/examples/BadRequest'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            NotFound:
              $ref: '#/components/examples/NotFound'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          examples:
            InternalServerError:
              $ref: '#/components/examples/InternalServerError'
  examples:
    UpgradeAppInstanceRequest:
      summary: Upgrade App Instance request
      value:
        type: "UPGRADE"
        targetAppId: "36471a81-1de4-4ad9-9724-426eefd44430"
        additionalData:
          componentInstances:
            - name: "eric-oss-hello-metrics-go-app"
              properties:
                timeout: 5
                userDefinedHelmParameters:
                  replicaCount: 1
    UpgradeAppInstanceResponse:
      summary: Upgrade App Instance Response
      value:
        type: "UPGRADE"
        targetAppId: "36471a81-1de4-4ad9-9724-426eefd44430"
        additionalData:
          componentInstances:
            - name: "eric-oss-hello-metrics-go-app"
              properties:
                timeout: 5
                userDefinedHelmParameters:
                  replicaCount: 1
        appInstance:
          status: "UPGRADING"
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
    CreateAppRequest:
      summary: Create App request body
      value:
        name: eric-oss-hello-world-multiple-microservices-go-app
        version: 1.1.1
        type: rApp
        provider: Ericsson
        components:
          - type: Microservice
            name: eric-oss-hello-metrics-go-app
            version: 1.1.1
            artifacts:
              - type: HELM
                name: eric-oss-hello-world-go-app
                location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
              - type: IMAGE
                name: docker.tar
                location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
        permissions:
          - resource: nginx
            scope: foo
          - resource: mongoDB
            scope: goodbyeWorld
        roles:
          - name: admin
    InitializeAppRequest:
      summary: Initialize App Request
      value:
        action: "INITIALIZE"
    DeinitializeAppRequest:
      summary: Sample Deinitialize App Request
      value:
        action: "DEINITIALIZE"
    CreateAppInstanceRequest:
      summary: Create App Instance Request Body
      value:
        appId: "26471a81-1de4-4ad9-9724-326eefd22230"
    EnableAppRequest:
      summary: Enable App Request
      value:
        mode: "ENABLED"
    DisableAppRequest:
      summary: Disable App Request
      value:
        mode: "DISABLED"
    CreateAppInstanceResponse:
      summary: Create App Instance Response
      value:
        id: 7e151de6-18a9-4770-be4f-354b620f0035
        appId: 26471a81-1de4-4ad9-9724-326eefd22230
        status: 'UNDEPLOYED'
        createdAt: "2023-04-06T00:04:16.711+00:00"
        updatedAt: "2023-04-06T00:05:16.711+00:00"
        credentials:
          clientId: rappid-3146ccdc-0323-4f34-8f3e-13b858c1c582-1708549936654-8c12ffcc-64c3-4070-b9b5-a115ded1f825
        componentInstances:
          - name: "eric-oss-hello-metrics-go-app"
            version: "1.1.1"
            type: Microservice
            deployState: 'UNDEPLOYED'
            properties:
              timeout: 5
              userDefinedHelmParameters:
                replicaCount: 2
        events: []
        self:
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
        app:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    CreateAppResponse:
      summary: Create App request
      value:
        id: 26471a81-1de4-4ad9-9724-326eefd22230
        name: eric-oss-hello-world-multiple-microservices-go-app
        version: 1.1.1
        mode: DISABLED
        status: CREATED
        createdAt: "2023-04-06T00:04:16.711+00:00"
        type: rApp
        provider: Ericsson
        components:
          - type: Microservice
            name: eric-oss-hello-metrics-go-app
            version: 1.1.1
            artifacts:
              - type: HELM
                name: eric-oss-hello-world-go-app
                location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
              - type: IMAGE
                name: docker.tar
                location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
        permissions:
          - resource: nginx
            scope: foo
          - resource: mongoDB
            scope: goodbyeWorld
        roles:
          - name: admin
        events: [ ]
        self:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    InitializeAppResponse:
      summary: Initialize App Response
      value:
        app:
          id: 26471a81-1de4-4ad9-9724-326eefd22230
          status: "INITIALIZING"
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    EnableAppResponse:
      summary: Enable App Response
      value:
        mode: "ENABLED"
        app:
          id: 26471a81-1de4-4ad9-9724-326eefd22230
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    DisableAppResponse:
      summary: Disable App Response
      value:
        mode: "DISABLED"
        app:
          id: 26471a81-1de4-4ad9-9724-326eefd22230
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    DeployAppInstanceRequest:
      summary: Deploy App Instance request
      value:
        type: "DEPLOY"
        additionalData:
          componentInstances:
            - name: "eric-oss-hello-metrics-go-app"
              properties:
                timeout: 5
                namespace: "namespace-example"
                userDefinedHelmParameters:
                  replicaCount: 1
    UndeployAppInstanceRequest:
      summary: Undeploy App Instance request
      value:
        type: "UNDEPLOY"
    BadRequest:
      value:
        title: Bad Request
        status: 400
        detail: The message body is missing a required field.
    NotFound:
      value:
        title: Not Found
        status: 404
        detail: The requested URL is not found.
    InternalServerError:
      value:
        title: Internal Server Error
        status: 500
        detail: Internal Server Error Occurs.
    AppInstanceResponse:
      summary: App Instance Response
      value:
        id: 7e151de6-18a9-4770-be4f-354b620f0035
        appId: 26471a81-1de4-4ad9-9724-326eefd22230
        status: DEPLOYED
        createdAt: "2023-04-06T00:04:16.711+00:00"
        updatedAt: "2023-04-06T00:05:16.711+00:00"
        credentials:
          clientId: rappid-3146ccdc-0323-4f34-8f3e-13b858c1c582-1708549936654-8c12ffcc-64c3-4070-b9b5-a115ded1f825
        componentInstances:
          - name: "eric-oss-hello-metrics-go-app"
            version: "1.1.1"
            type: Microservice
            deployState: DEPLOYED
            properties:
              timeout: 5
              namespace: "namespace-example"
              userDefinedHelmParameters:
                replicaCount: 2
        events: []
        self:
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
        app:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    AppInstancesResponse:
      summary: App Instances Response
      value:
        items:
          - id: 7e151de6-18a9-4770-be4f-354b620f0035
            appId: 26471a81-1de4-4ad9-9724-326eefd22230
            status: DEPLOYED
            createdAt: "2023-04-06T00:04:16.711+00:00"
            updatedAt: "2023-04-06T00:05:16.711+00:00"
            credentials:
              clientId: rappid-3146ccdc-0323-4f34-8f3e-13b858c1c582-1708549936654-8c12ffcc-64c3-4070-b9b5-a115ded1f825
            componentInstances:
              - name: "eric-oss-hello-metrics-go-app"
                version: "1.1.1"
                type: Microservice
                deployState: DEPLOYED
                properties:
                  timeout: 5
                  namespace: "namespace-example"
                  userDefinedHelmParameters:
                    replicaCount: 2
            events: []
            self:
              href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
            app:
              href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    AppItemsResponseOnCreated:
      summary: Get App Response on CREATED
      value:
        items:
          - id: 26471a81-1de4-4ad9-9724-326eefd22230
            type: rApp
            name: eric-oss-hello-world-multiple-microservices-go-app
            version: 1.1.1
            mode: DISABLED
            status: CREATED
            createdAt: "2024-02-20 10:51:45.427503"
            components:
              - type: Microservice
                name: eric-oss-hello-metrics-go-app
                version: 1.1.1
                artifacts:
                  - type: HELM
                    name: eric-oss-hello-world-go-app
                    location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
                  - type: IMAGE
                    name: docker.tar
                    location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
            permissions:
              - resource: nginx
                scope: foo
              - resource: mongoDB
                scope: goodbyeWorld
            roles:
              - name: admin
            events: [ ]
            self:
              href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    AppItemsResponseOnInitialized:
      summary: Get App Response on INITIALIZED
      value:
        items:
          - id: 26471a81-1de4-4ad9-9724-326eefd22230
            type: rApp
            name: eric-oss-hello-world-multiple-microservices-go-app
            version: 1.1.1
            mode: ENABLED
            status: INITIALIZED
            createdAt: "2024-02-20 10:51:45.427503"
            components:
              - type: Microservice
                name: eric-oss-hello-metrics-go-app
                version: 1.1.1
                artifacts:
                  - type: HELM
                    name: eric-oss-hello-world-go-app
                    location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
                  - type: IMAGE
                    name: docker.tar
                    location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
            permissions:
              - resource: nginx
                scope: foo
              - resource: mongoDB
                scope: goodbyeWorld
            roles:
              - name: admin
            events: [ ]
            self:
              href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    AppItemsResponseOnDeInitialize:
      summary: Get App Response on DEINITIALIZE
      value:
        items:
          - id: 26471a81-1de4-4ad9-9724-326eefd22230
            type: rApp
            name: eric-oss-hello-world-multiple-microservices-go-app
            version: 1.1.1
            mode: DISABLED
            status: CREATED
            createdAt: "2024-02-20 10:51:45.427503"
            components:
              - type: Microservice
                name: eric-oss-hello-metrics-go-app
                version: 1.1.1
                artifacts:
                  - type: HELM
                    name: eric-oss-hello-world-go-app
                    location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
                  - type: IMAGE
                    name: docker.tar
                    location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
            permissions:
              - resource: nginx
                scope: foo
              - resource: mongoDB
                scope: goodbyeWorld
            roles:
              - name: admin
            events: [ ]
            self:
              href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    GetAppResponse:
      summary: Get App Response
      value:
        id: 26471a81-1de4-4ad9-9724-326eefd22230
        name: eric-oss-hello-world-multiple-microservices-go-app
        version: 1.1.1
        mode: DISABLED
        status: CREATED
        createdAt: "2023-04-06T00:04:16.711+00:00"
        type: rApp
        components:
          - type: Microservice
            name: eric-oss-hello-metrics-go-app
            version: 1.1.1
            artifacts:
              - type: HELM
                name: eric-oss-hello-world-go-app
                location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
              - type: IMAGE
                name: docker.tar
                location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
        permissions:
          - resource: nginx
            scope: foo
          - resource: mongoDB
            scope: goodbyeWorld
        roles:
          - name: admin
        events: [ ]
        self:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    GetAppResponseOnInitialize:
      summary: Get App when INITIALIZED is triggered
      value:
        id: 26471a81-1de4-4ad9-9724-326eefd22230
        name: eric-oss-hello-world-multiple-microservices-go-app
        version: 1.1.1
        mode: DISABLED
        status: INITIALIZING
        createdAt: "2023-04-06T00:04:16.711+00:00"
        type: rApp
        components:
          - type: Microservice
            name: eric-oss-hello-metrics-go-app
            version: 1.1.1
            artifacts:
              - type: HELM
                name: eric-oss-hello-world-go-app
                location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
              - type: IMAGE
                name: docker.tar
                location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
        permissions:
          - resource: nginx
            scope: foo
          - resource: mongoDB
            scope: goodbyeWorld
        roles:
          - name: admin
        events: [ ]
        self:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    GetAppResponseOnInitialized:
      summary: Get App when INITIALIZED is successful
      value:
        id: 26471a81-1de4-4ad9-9724-326eefd22230
        name: eric-oss-hello-world-multiple-microservices-go-app
        version: 1.1.1
        mode: DISABLED
        status: INITIALIZED
        createdAt: "2023-04-06T00:04:16.711+00:00"
        type: rApp
        components:
          - type: Microservice
            name: eric-oss-hello-metrics-go-app
            version: 1.1.1
            artifacts:
              - type: HELM
                name: eric-oss-hello-world-go-app
                location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
              - type: IMAGE
                name: docker.tar
                location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
        permissions:
          - resource: nginx
            scope: foo
          - resource: mongoDB
            scope: goodbyeWorld
        roles:
          - name: admin
        events: [ ]
        self:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    GetAppResponseOnDeInitialized:
      summary: Get App when DEINITIALIZE is triggered
      value:
        id: 26471a81-1de4-4ad9-9724-326eefd22230
        name: eric-oss-hello-world-multiple-microservices-go-app
        version: 1.1.1
        mode: ENABLED
        status: DEINITIALIZING
        createdAt: "2023-04-06T00:04:16.711+00:00"
        type: rApp
        components:
          - type: Microservice
            name: eric-oss-hello-metrics-go-app
            version: 1.1.1
            artifacts:
              - type: HELM
                name: eric-oss-hello-world-go-app
                location: 26471a81-1de4-4ad9-9724-326eefd22230/eric-oss-hello-world-go-app
              - type: IMAGE
                name: docker.tar
                location: 26471a81-1de4-4ad9-9724-326eefd22230/docker
        permissions:
          - resource: nginx
            scope: foo
          - resource: mongoDB
            scope: goodbyeWorld
        roles:
          - name: admin
        events: [ ]
        self:
          href: "app-lifecycle-management/v3/apps/26471a81-1de4-4ad9-9724-326eefd22230"
    DeployAppInstanceResponse:
      summary: Deploy App Instance response
      value:
        type: "DEPLOY"
        additionalData:
          componentInstances:
            - name: "eric-oss-hello-metrics-go-app"
              properties:
                timeout: 5
                namespace: "namespace-example"
                userDefinedHelmParameters:
                  replicaCount: 1
        appInstance:
          status: "DEPLOYING"
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
    UndeployAppInstanceResponse:
      summary: Undeploy App Instance response
      value:
        type: "UNDEPLOY"
        appInstance:
          status: "UNDEPLOYING"
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
    DeleteAppInstanceResponse:
      summary: Delete an App Instance response
      value:
        appInstance:
          status: "DELETING"
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
    UpdateAppInstanceRequest:
      summary: Update App Instance Request
      value:
        componentInstances:
          - name: "eric-oss-hello-metrics-go-app"
            version: "1.1.1"
            type: Microservice
            deployState: DEPLOYED
            properties:
              timeout: 15
              userDefinedHelmParameters:
                replicaCount: 5
    UpdateAppInstanceResponse:
      summary: Update deployed App instance response
      value:
        componentInstances:
          - name: "eric-oss-5gcnr"
            version: "1.2.3"
            type: Microservice
            deployState: UPDATING
            properties:
              timeout: 15
              namespace: "namespace-example"
              userDefinedHelmParameters:
                replicaCount: 5
        appInstance:
          id: "7e151de6-18a9-4770-be4f-354b620f0035"
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"
    UpdateAppInstanceResponseUndeployed:
      summary: Update undeployed App instance response
      value:
        componentInstances:
          - name: "eric-oss-5gcnr"
            version: "1.2.3"
            type: Microservice
            deployState: UNDEPLOYED
            properties:
              timeout: 15
              namespace: "namespace-example"
              userDefinedHelmParameters:
                replicaCount: 5
        appInstance:
          id: "7e151de6-18a9-4770-be4f-354b620f0035"
          href: "app-lifecycle-management/v3/app-instances/7e151de6-18a9-4770-be4f-354b620f0035"